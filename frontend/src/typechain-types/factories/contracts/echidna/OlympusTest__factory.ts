/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { PromiseOrValue } from "../../../common";
import type { OlympusTest, OlympusTestInterface } from "../../../contracts/echidna/OlympusTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drachma",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "echidnaDrachmaIsConstant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "echidnaPriceIsPositive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "obtainNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "openLootBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600b80546001600160a01b03191672a329c0648769a73afac7f9381e08fb43dbea731790553480156200003657600080fd5b50600b5460408051808201825260078152664f6c796d70757360c81b60208083019182528351808501909452600384526204f4d560ec1b9084015281516001600160a01b039094169391929162000090916000916200011a565b508051620000a69060019060208401906200011a565b5050506001600160a01b038116620001045760405162461bcd60e51b815260206004820152601a60248201527f5b4f6c796d7075735d3a20496e76616c69642061646472657373000000000000604482015260640160405180910390fd5b60601b6001600160601b031916608052620001fd565b8280546200012890620001c0565b90600052602060002090601f0160209004810192826200014c576000855562000197565b82601f106200016757805160ff191683800117855562000197565b8280016001018555821562000197579182015b82811115620001975782518255916020019190600101906200017a565b50620001a5929150620001a9565b5090565b5b80821115620001a55760008155600101620001aa565b600181811c90821680620001d557607f821691505b60208210811415620001f757634e487b7160e01b600052602260045260246000fd5b50919050565b60805160601c611e606200022a600039600081816102bc0152818161031b01526107720152611e606000f3fe6080604052600436106101355760003560e01c80635cd78613116100ab57806395d89b411161006f57806395d89b41146103885780639fa013a71461039d578063a22cb465146103b1578063b88d4fde146103d1578063c87b56dd146103f1578063e985e9c51461041157600080fd5b80635cd78613146102de5780636352211e146102e65780636c7e85361461030657806370a082311461034b5780638d859f3e1461036b57600080fd5b806323b872dd116100fd57806323b872dd1461020a5780632f50acf91461022a5780632f745c591461024a57806342842e0e1461026a5780634f6ccce71461028a578063522b9335146102aa57600080fd5b806301ffc9a71461013a57806306fdde031461016f578063081812fc14610191578063095ea7b3146101c957806318160ddd146101eb575b600080fd5b34801561014657600080fd5b5061015a610155366004611ab9565b61045a565b60405190151581526020015b60405180910390f35b34801561017b57600080fd5b50610184610485565b6040516101669190611bc0565b34801561019d57600080fd5b506101b16101ac366004611af3565b610517565b6040516001600160a01b039091168152602001610166565b3480156101d557600080fd5b506101e96101e4366004611a72565b6105b1565b005b3480156101f757600080fd5b506008545b604051908152602001610166565b34801561021657600080fd5b506101e9610225366004611923565b6106c7565b34801561023657600080fd5b506101e96102453660046118d5565b6106f8565b34801561025657600080fd5b506101fc610265366004611a72565b6107af565b34801561027657600080fd5b506101e9610285366004611923565b610845565b34801561029657600080fd5b506101fc6102a5366004611af3565b610860565b3480156102b657600080fd5b506101b17f000000000000000000000000000000000000000000000000000000000000000081565b6101e96108f3565b3480156102f257600080fd5b506101b1610301366004611af3565b610954565b34801561031257600080fd5b5061015a600b547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b34801561035757600080fd5b506101fc6103663660046118d5565b6109cb565b34801561037757600080fd5b506101fc681043561a882930000081565b34801561039457600080fd5b50610184610a52565b3480156103a957600080fd5b50600161015a565b3480156103bd57600080fd5b506101e96103cc366004611a3b565b610a61565b3480156103dd57600080fd5b506101e96103ec36600461195f565b610a70565b3480156103fd57600080fd5b5061018461040c366004611af3565b610aa8565b34801561041d57600080fd5b5061015a61042c3660046118f0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b148061047f575061047f82610b83565b92915050565b60606000805461049490611ce5565b80601f01602080910402602001604051908101604052809291908181526020018280546104c090611ce5565b801561050d5780601f106104e25761010080835404028352916020019161050d565b820191906000526020600020905b8154815290600101906020018083116104f057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105955760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105bc82610954565b9050806001600160a01b0316836001600160a01b0316141561062a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161058c565b336001600160a01b03821614806106465750610646813361042c565b6106b85760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161058c565b6106c28383610bd3565b505050565b6106d13382610c41565b6106ed5760405162461bcd60e51b815260040161058c90611c25565b6106c2838383610d38565b6001600160a01b0381161580159061071957506001600160a01b0381163014155b6107655760405162461bcd60e51b815260206004820152601a60248201527f5b4f6c79706d75735d3a20496e76616c69642061646472657373000000000000604482015260640161058c565b6107a36001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330681043561a8829300000610edf565b6107ac81610f39565b50565b60006107ba836109cb565b821061081c5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161058c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6106c283838360405180602001604052806000815250610a70565b600061086b60085490565b82106108ce5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161058c565b600882815481106108e1576108e1611d91565b90600052602060002001549050919050565b34662386f26fc10000146109495760405162461bcd60e51b815260206004820152601a60248201527f5b4f6c796d7075735d3a20496e636f72726563742066756e6473000000000000604482015260640161058c565b61095233610f39565b565b6000818152600260205260408120546001600160a01b03168061047f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161058c565b60006001600160a01b038216610a365760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161058c565b506001600160a01b031660009081526003602052604090205490565b60606001805461049490611ce5565b610a6c338383610f5e565b5050565b610a7a3383610c41565b610a965760405162461bcd60e51b815260040161058c90611c25565b610aa28484848461102d565b50505050565b6000818152600260205260409020546060906001600160a01b0316610b275760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161058c565b6000610b31611060565b90506000815111610b515760405180602001604052806000815250610b7c565b80610b5b84611080565b604051602001610b6c929190611b54565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b1480610bb457506001600160e01b03198216635b5e139f60e01b145b8061047f57506301ffc9a760e01b6001600160e01b031983161461047f565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610c0882610954565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610cba5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161058c565b6000610cc583610954565b9050806001600160a01b0316846001600160a01b03161480610d0c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610d305750836001600160a01b0316610d2584610517565b6001600160a01b0316145b949350505050565b826001600160a01b0316610d4b82610954565b6001600160a01b031614610daf5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b606482015260840161058c565b6001600160a01b038216610e115760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161058c565b610e1c83838361117e565b610e27600082610bd3565b6001600160a01b0383166000908152600360205260408120805460019290610e50908490611ca2565b90915550506001600160a01b0382166000908152600360205260408120805460019290610e7e908490611c76565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610aa2908590611236565b6000610f44600a5490565b9050610f54600a80546001019055565b610a6c8282611308565b816001600160a01b0316836001600160a01b03161415610fc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161058c565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611038848484610d38565b61104484848484611322565b610aa25760405162461bcd60e51b815260040161058c90611bd3565b6060604051806080016040528060498152602001611de260499139905090565b6060816110a45750506040805180820190915260018152600360fc1b602082015290565b8160005b81156110ce57806110b881611d20565b91506110c79050600a83611c8e565b91506110a8565b60008167ffffffffffffffff8111156110e9576110e9611da7565b6040519080825280601f01601f191660200182016040528015611113576020820181803683370190505b5090505b8415610d3057611128600183611ca2565b9150611135600a86611d3b565b611140906030611c76565b60f81b81838151811061115557611155611d91565b60200101906001600160f81b031916908160001a905350611177600a86611c8e565b9450611117565b6001600160a01b0383166111d9576111d481600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6111fc565b816001600160a01b0316836001600160a01b0316146111fc576111fc838261142f565b6001600160a01b038216611213576106c2816114cc565b826001600160a01b0316826001600160a01b0316146106c2576106c2828261157b565b600061128b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115bf9092919063ffffffff16565b8051909150156106c257808060200190518101906112a99190611a9c565b6106c25760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161058c565b610a6c8282604051806020016040528060008152506115ce565b60006001600160a01b0384163b1561142457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611366903390899088908890600401611b83565b602060405180830381600087803b15801561138057600080fd5b505af19250505080156113b0575060408051601f3d908101601f191682019092526113ad91810190611ad6565b60015b61140a573d8080156113de576040519150601f19603f3d011682016040523d82523d6000602084013e6113e3565b606091505b5080516114025760405162461bcd60e51b815260040161058c90611bd3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610d30565b506001949350505050565b6000600161143c846109cb565b6114469190611ca2565b600083815260076020526040902054909150808214611499576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906114de90600190611ca2565b6000838152600960205260408120546008805493945090928490811061150657611506611d91565b90600052602060002001549050806008838154811061152757611527611d91565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061155f5761155f611d7b565b6001900381819060005260206000200160009055905550505050565b6000611586836109cb565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6060610d308484600085611601565b6115d88383611732565b6115e56000848484611322565b6106c25760405162461bcd60e51b815260040161058c90611bd3565b6060824710156116625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161058c565b6001600160a01b0385163b6116b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161058c565b600080866001600160a01b031685876040516116d59190611b38565b60006040518083038185875af1925050503d8060008114611712576040519150601f19603f3d011682016040523d82523d6000602084013e611717565b606091505b5091509150611727828286611880565b979650505050505050565b6001600160a01b0382166117885760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161058c565b6000818152600260205260409020546001600160a01b0316156117ed5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161058c565b6117f96000838361117e565b6001600160a01b0382166000908152600360205260408120805460019290611822908490611c76565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060831561188f575081610b7c565b82511561189f5782518084602001fd5b8160405162461bcd60e51b815260040161058c9190611bc0565b80356001600160a01b03811681146118d057600080fd5b919050565b6000602082840312156118e757600080fd5b610b7c826118b9565b6000806040838503121561190357600080fd5b61190c836118b9565b915061191a602084016118b9565b90509250929050565b60008060006060848603121561193857600080fd5b611941846118b9565b925061194f602085016118b9565b9150604084013590509250925092565b6000806000806080858703121561197557600080fd5b61197e856118b9565b935061198c602086016118b9565b925060408501359150606085013567ffffffffffffffff808211156119b057600080fd5b818701915087601f8301126119c457600080fd5b8135818111156119d6576119d6611da7565b604051601f8201601f19908116603f011681019083821181831017156119fe576119fe611da7565b816040528281528a6020848701011115611a1757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a4e57600080fd5b611a57836118b9565b91506020830135611a6781611dbd565b809150509250929050565b60008060408385031215611a8557600080fd5b611a8e836118b9565b946020939093013593505050565b600060208284031215611aae57600080fd5b8151610b7c81611dbd565b600060208284031215611acb57600080fd5b8135610b7c81611dcb565b600060208284031215611ae857600080fd5b8151610b7c81611dcb565b600060208284031215611b0557600080fd5b5035919050565b60008151808452611b24816020860160208601611cb9565b601f01601f19169290920160200192915050565b60008251611b4a818460208701611cb9565b9190910192915050565b60008351611b66818460208801611cb9565b835190830190611b7a818360208801611cb9565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611bb690830184611b0c565b9695505050505050565b602081526000610b7c6020830184611b0c565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611c8957611c89611d4f565b500190565b600082611c9d57611c9d611d65565b500490565b600082821015611cb457611cb4611d4f565b500390565b60005b83811015611cd4578181015183820152602001611cbc565b83811115610aa25750506000910152565b600181811c90821680611cf957607f821691505b60208210811415611d1a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611d3457611d34611d4f565b5060010190565b600082611d4a57611d4a611d65565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146107ac57600080fd5b6001600160e01b0319811681146107ac57600080fdfe306c796d7075732d656e762e6562612d65657433677979632e65752d776573742d322e656c61737469636265616e7374616c6b2e636f6d2f6261636b656e642f6d657461646174612fa2646970667358221220b7353a690e01df8787a68028fd467b161c13ea4f8f24d6778a1b2d8513ad266b64736f6c63430008070033";

type OlympusTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OlympusTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OlympusTest__factory extends ContractFactory {
  constructor(...args: OlympusTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<OlympusTest> {
    return super.deploy(overrides || {}) as Promise<OlympusTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OlympusTest {
    return super.attach(address) as OlympusTest;
  }
  override connect(signer: Signer): OlympusTest__factory {
    return super.connect(signer) as OlympusTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OlympusTestInterface {
    return new utils.Interface(_abi) as OlympusTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OlympusTest {
    return new Contract(address, _abi, signerOrProvider) as OlympusTest;
  }
}
