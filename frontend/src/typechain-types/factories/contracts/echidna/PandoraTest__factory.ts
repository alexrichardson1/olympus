/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides, Signer, utils } from "ethers";
import type { PromiseOrValue } from "../../../common";
import type { PandoraTest, PandoraTestInterface } from "../../../contracts/echidna/PandoraTest";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drachma",
    outputs: [
      {
        internalType: "contract Drachma",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "echidnaClaimedRewardsIsPositive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "echidnaDrachmaIsConstant",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600380546001600160a01b03191672a329c0648769a73afac7f9381e08fb43dbea7317905534801561003557600080fd5b506003546000805460ff191690556001600160a01b0316610055336100c8565b600180556001600160a01b0381166100b35760405162461bcd60e51b815260206004820152601a60248201527f5b50616e646f72615d3a20496e76616c69642061646472657373000000000000604482015260640160405180910390fd5b60601b6001600160601b031916608052610121565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60805160601c610d2161014c6000396000818160f10152818161013e01526103a80152610d216000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80636c7e8536116100715780636c7e853614610136578063715018a61461016e5780638456cb59146101765780638da5cb5b1461017e578063bd83434514610194578063f2fde38b146101c257600080fd5b80630d8d4832146100ae57806338926b6d146100cf5780633f4ba83a146100e4578063522b9335146100ec5780635c975abb1461012b575b600080fd5b33600052600260205260015b60405190151581526020015b60405180910390f35b6100e26100dd366004610bb5565b6101d5565b005b6100e2610417565b6101137f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100c6565b60005460ff166100ba565b6100ba6003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6100e261049a565b6100e26104d4565b60005461010090046001600160a01b0316610113565b6101b46101a2366004610b85565b60026020526000908152604090205481565b6040519081526020016100c6565b6100e26101d0366004610b85565b61052f565b60005460ff16156102015760405162461bcd60e51b81526004016101f890610c31565b60405180910390fd5b600260015414156102545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101f8565b6002600155610265338484846105d0565b6102bd5760405162461bcd60e51b815260206004820152602360248201527f5b50616e646f72615d3a20496e76616c6964207369676e6572206f7220616d6f6044820152621d5b9d60ea1b60648201526084016101f8565b3360009081526002602052604090205480841161031c5760405162461bcd60e51b815260206004820152601a60248201527f5b50616e646f72615d3a20416c726561647920636c61696d656400000000000060448201526064016101f8565b60006103288286610ca8565b3360009081526002602052604081208054929350839290919061034c908490610c90565b9091555050604080514281526020810183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a26040516340c10f1960e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b1580156103f457600080fd5b505af1158015610408573d6000803e3d6000fd5b50506001805550505050505050565b6000546001600160a01b036101009091041633146104475760405162461bcd60e51b81526004016101f890610c5b565b60005460ff166104905760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016101f8565b6104986106cc565b565b6000546001600160a01b036101009091041633146104ca5760405162461bcd60e51b81526004016101f890610c5b565b610498600061075f565b6000546001600160a01b036101009091041633146105045760405162461bcd60e51b81526004016101f890610c5b565b60005460ff16156105275760405162461bcd60e51b81526004016101f890610c31565b6104986107b8565b6000546001600160a01b0361010090910416331461055f5760405162461bcd60e51b81526004016101f890610c5b565b6001600160a01b0381166105c45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f8565b6105cd8161075f565b50565b60408051606086901b6bffffffffffffffffffffffff19166020808301919091526034808301879052835180840390910181526054830184528051908201207f19457468657265756d205369676e6564204d6573736167653a0a333200000000607484015260908084018290528451808503909101815260b0909301909352815191012060009190829060005490915061010090046001600160a01b03166001600160a01b03166106b78287878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061081092505050565b6001600160a01b031614979650505050505050565b60005460ff166107155760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016101f8565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b60005460ff16156107db5760405162461bcd60e51b81526004016101f890610c31565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107423390565b600080600061081f8585610834565b9150915061082c816108a4565b509392505050565b60008082516041141561086b5760208301516040840151606085015160001a61085f87828585610a5f565b9450945050505061089d565b825160401415610895576020830151604084015161088a868383610b4c565b93509350505061089d565b506000905060025b9250929050565b60008160048111156108b8576108b8610cd5565b14156108c15750565b60018160048111156108d5576108d5610cd5565b14156109235760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101f8565b600281600481111561093757610937610cd5565b14156109855760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101f8565b600381600481111561099957610999610cd5565b14156109f25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101f8565b6004816004811115610a0657610a06610cd5565b14156105cd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101f8565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610a965750600090506003610b43565b8460ff16601b14158015610aae57508460ff16601c14155b15610abf5750600090506004610b43565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610b13573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b3c57600060019250925050610b43565b9150600090505b94509492505050565b6000806001600160ff1b03831681610b6960ff86901c601b610c90565b9050610b7787828885610a5f565b935093505050935093915050565b600060208284031215610b9757600080fd5b81356001600160a01b0381168114610bae57600080fd5b9392505050565b600080600060408486031215610bca57600080fd5b83359250602084013567ffffffffffffffff80821115610be957600080fd5b818601915086601f830112610bfd57600080fd5b813581811115610c0c57600080fd5b876020828501011115610c1e57600080fd5b6020830194508093505050509250925092565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610ca357610ca3610cbf565b500190565b600082821015610cba57610cba610cbf565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea2646970667358221220ed4919173e8fccaaa0198bc557fa78ea77dfd5194478eb6f66041a1bf7969e9b64736f6c63430008070033";

type PandoraTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PandoraTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PandoraTest__factory extends ContractFactory {
  constructor(...args: PandoraTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PandoraTest> {
    return super.deploy(overrides || {}) as Promise<PandoraTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PandoraTest {
    return super.attach(address) as PandoraTest;
  }
  override connect(signer: Signer): PandoraTest__factory {
    return super.connect(signer) as PandoraTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PandoraTestInterface {
    return new utils.Interface(_abi) as PandoraTestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PandoraTest {
    return new Contract(address, _abi, signerOrProvider) as PandoraTest;
  }
}
